pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "kushagrag99/ultimate-cicd:v1.${BUILD_NUMBER}"
    REGISTRY_CREDENTIALS = credentials('docker-cred')
    GIT_REPO_NAME = "CI-CD-pipeline-java-app"
    GIT_USER_NAME = "kushagra-g9"
  }

  stages {

    stage('Clean Workspace') {
      steps {
        cleanWs()
      }
    }

    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/kushagra-g9/CI-CD-pipeline-java-app.git'
      }
    }

    stage('Build and Test') {
      steps {
        dir('spring-boot-app') {
          sh 'ls -la'
          sh 'mvn -B -DskipTests clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withSonarQubeEnv('SonarQube') {
          dir('spring-boot-app') {
            sh 'mvn sonar:sonar'
          }
        }
      }
    }


    stage('Build Docker Image') {
      steps {
        dir('spring-boot-app') {
          sh "docker build -t ${DOCKER_IMAGE} ."
        }
      }
    }

   

    stage('Push Docker Image') {
      steps {
        script {
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config --global user.email "guptakushagra99@gmail.com"
            git config --global user.name "Kushagra Gupta"
            sed -i "s|\\(kushagrag99/ultimate-cicd:\\).*|\\1v1.${BUILD_NUMBER}|" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version v1.${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }

  }
}
