pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  
  environment {
    DOCKER_IMAGE = "kushagrag99/ultimate-cicd:${BUILD_NUMBER}"
    REGISTRY_CREDENTIALS = credentials('docker-cred')
    GIT_REPO_NAME = "CI-CD-pipeline-java-app"
    GIT_USER_NAME = "kushagra-g9"
  }

  stages {
   stage('Clean Workspace') {
    steps {
    cleanWs()  // Jenkins workspace cleanup plugin
    }
  }

    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/kushagra-g9/CI-CD-pipeline-java-app.git'
      }
    }

    stage('Build and Test') {
      steps {
        dir('spring-boot-app') {
           sh 'mvn -B -DskipTests clean package'
         
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withSonarQubeEnv('SonarQube') {
          dir('spring-boot-app') {
            sh 'mvn sonar:sonar'
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        dir('spring-boot-app') {
          script {
            sh "docker build -t ${DOCKER_IMAGE} ."
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config --global user.email "guptakushagra99@gmail.com"
            git config --global user.name "Kushagra Gupta"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}

